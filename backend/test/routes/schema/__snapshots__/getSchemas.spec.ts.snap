// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`routes > schema > getSchemas > audit > expected call 1`] = `
[
  {
    "active": true,
    "createdAt": 2023-07-28T10:50:00.928Z,
    "description": "This is a description of the schema.",
    "hidden": false,
    "id": "example-deployment-schema-1",
    "jsonSchema": {
      "Schema field 1": "field 1 info",
    },
    "kind": "accessRequest",
    "name": "Example Schema 1",
    "updatedAt": 2023-07-28T10:50:00.928Z,
  },
  {
    "active": true,
    "createdAt": 2023-07-28T10:50:00.928Z,
    "description": "This is a description of the schema.",
    "hidden": false,
    "id": "example-model-schema-1",
    "jsonSchema": {
      "properties": {
        "overview": {
          "description": "Summary of the model functionality.",
          "properties": {
            "name": {
              "description": "This should be descriptive name, such as 'Arabic - English Translation', and will be visible in the model marketplace.",
              "maxLength": 140,
              "minLength": 1,
              "title": "Name of the Machine Learning Model",
              "type": "string",
              "widget": "customTextInput",
            },
          },
          "title": "Overview",
          "type": "object",
        },
      },
    },
    "kind": "model",
    "name": "Example Schema 1",
    "reviewRoles": [
      "reviewer",
      "msro",
    ],
    "updatedAt": 2023-07-28T10:50:00.928Z,
  },
]
`;

exports[`routes > schema > getSchemas > rejects unknown query parameter 1`] = `
{
  "error": {
    "context": {
      "errors": [
        {
          "code": "invalid_enum_value",
          "message": "Invalid enum value. Expected '' | 'model' | 'accessRequest' | 'dataCard', received 'notValid'",
          "options": [
            "",
            "model",
            "accessRequest",
            "dataCard",
          ],
          "path": [
            "query",
            "kind",
          ],
          "received": "notValid",
        },
      ],
    },
    "message": "Path: query.kind - Message: Invalid enum value. Expected '' | 'model' | 'accessRequest' | 'dataCard', received 'notValid'",
    "name": "Bailo Error",
  },
}
`;

exports[`routes > schema > getSchemas > returns all schemas 1`] = `
{
  "schemas": [
    {
      "active": true,
      "createdAt": "2023-07-28T10:50:00.928Z",
      "description": "This is a description of the schema.",
      "hidden": false,
      "id": "example-deployment-schema-1",
      "jsonSchema": {
        "Schema field 1": "field 1 info",
      },
      "kind": "accessRequest",
      "name": "Example Schema 1",
      "updatedAt": "2023-07-28T10:50:00.928Z",
    },
    {
      "active": true,
      "createdAt": "2023-07-28T10:50:00.928Z",
      "description": "This is a description of the schema.",
      "hidden": false,
      "id": "example-model-schema-1",
      "jsonSchema": {
        "properties": {
          "overview": {
            "description": "Summary of the model functionality.",
            "properties": {
              "name": {
                "description": "This should be descriptive name, such as 'Arabic - English Translation', and will be visible in the model marketplace.",
                "maxLength": 140,
                "minLength": 1,
                "title": "Name of the Machine Learning Model",
                "type": "string",
                "widget": "customTextInput",
              },
            },
            "title": "Overview",
            "type": "object",
          },
        },
      },
      "kind": "model",
      "name": "Example Schema 1",
      "reviewRoles": [
        "reviewer",
        "msro",
      ],
      "updatedAt": "2023-07-28T10:50:00.928Z",
    },
  ],
}
`;

exports[`routes > schema > getSchemas > returns only deployment schemas with the accessRequest parameter 1`] = `
{
  "schemas": [
    {
      "active": true,
      "createdAt": "2023-07-28T10:50:00.928Z",
      "description": "This is a description of the schema.",
      "hidden": false,
      "id": "example-deployment-schema-1",
      "jsonSchema": {
        "Schema field 1": "field 1 info",
      },
      "kind": "accessRequest",
      "name": "Example Schema 1",
      "updatedAt": "2023-07-28T10:50:00.928Z",
    },
  ],
}
`;

exports[`routes > schema > getSchemas > returns only model schemas with the model parameter 1`] = `
{
  "schemas": [
    {
      "active": true,
      "createdAt": "2023-07-28T10:50:00.928Z",
      "description": "This is a description of the schema.",
      "hidden": false,
      "id": "example-model-schema-1",
      "jsonSchema": {
        "properties": {
          "overview": {
            "description": "Summary of the model functionality.",
            "properties": {
              "name": {
                "description": "This should be descriptive name, such as 'Arabic - English Translation', and will be visible in the model marketplace.",
                "maxLength": 140,
                "minLength": 1,
                "title": "Name of the Machine Learning Model",
                "type": "string",
                "widget": "customTextInput",
              },
            },
            "title": "Overview",
            "type": "object",
          },
        },
      },
      "kind": "model",
      "name": "Example Schema 1",
      "reviewRoles": [
        "reviewer",
        "msro",
      ],
      "updatedAt": "2023-07-28T10:50:00.928Z",
    },
  ],
}
`;
